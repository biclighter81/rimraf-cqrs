type CommandResponse {
  id: ID!
  errorMessage: String
}

input BuildArticle {
  name: String!
}

input ArticleReadyForSale {
  articleId: ID!
  price: Int!
}

type ArticleCommands {
  buildArticle(payload: BuildArticle!): CommandResponse!
  articleReadyForSale(payload: ArticleReadyForSale!): CommandResponse!
  changePrice(articleId:ID!,newPrice:Int!):CommandResponse!
  disable(articleId:ID!):CommandResponse!
  changeArticleName(payload: ChangeArticleName!): CommandResponse!
  assignManufacturer(articleId: String!, manufacturerId: String!): CommandResponse!
}

type ManufacturerCommands {
  createManufactor(name:String!): CommandResponse!
  changeName(manufactorId: String!, name: String!): CommandResponse!
}

type Mutation {
  article: ArticleCommands
  manufacturer: ManufacturerCommands
}

input ChangeArticleName {
  name: String!
  id: String!
}

type Query {
  healthCheck: String!
}
